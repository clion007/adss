name: Build ADSS Packages

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - {name: "x86_64", sdk_url_pattern: "x86/64"}
          - {name: "arm_cortex-a9", sdk_url_pattern: "armvirt/32"}
          - {name: "mipsel_24kc", sdk_url_pattern: "ramips/mt7621"}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest OpenWrt SDK
        id: get_sdk
        run: |
          # 获取最新SDK版本
          SDK_BASE_URL="https://downloads.openwrt.org/snapshots/targets/${{ matrix.target.sdk_url_pattern }}"
          SDK_FILE=$(curl -s $SDK_BASE_URL/ | grep -o "openwrt-sdk-.*Linux-x86_64.tar.xz" | head -n 1)
          echo "SDK_URL=${SDK_BASE_URL}/${SDK_FILE}" >> $GITHUB_OUTPUT
          echo "使用SDK: ${SDK_BASE_URL}/${SDK_FILE}"

      - name: Setup OpenWrt SDK
        run: |
          mkdir -p openwrt
          cd openwrt
          wget ${{ steps.get_sdk.outputs.SDK_URL }}
          tar -xf openwrt-sdk-*.tar.xz --strip=1
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          mkdir -p package/adss
          cp -r $GITHUB_WORKSPACE/* package/adss/
          
      - name: Build Packages
        run: |
          cd openwrt
          make defconfig
          make package/adss/compile V=s
          make package/luci-app-adss/compile V=s
          
      - name: Collect Packages
        run: |
          mkdir -p packages/${{ matrix.target.name }}
          find openwrt/bin/packages/ -name "adss*.ipk" -exec cp {} packages/${{ matrix.target.name }}/ \;
          find openwrt/bin/packages/ -name "luci-app-adss*.ipk" -exec cp {} packages/${{ matrix.target.name }}/ \;
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: adss-packages-${{ matrix.target.name }}
          path: packages/${{ matrix.target.name }}/
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: packages/${{ matrix.target.name }}/*